'''
9장 최단 경로 실전문제2 - 미래 도시
난이도: 중, 풀이시간: 40분, 시간제한: 1초, 메모리제한: 128MB

문제설명
방문 판매원 A, N개 회사
특정 회사끼리는 서로 도로를 통해 연결되어 있다. 도로는 양방향, 모드 도로는 1만큼의 시간 소요
방문 판매원 A의 현재 위치는 1번 회사이고,
1. K번 회사에서 소개팅을 할 계획이다.(커피마시는 시간은 고려하지 X)
2. X번 회사에 방문해서 물건을 판매하고자 한다.
회사 사이를 이동하게 되는 최소 시간을 계산하느 프로그램

입력조건
첫째 줄에 회사 개수 N, 경로 개수 M이 주어진다.(1<=N, M<=100)
둘쨰 줄부터 M+1번째 줄에는 연결된 두 회사의 번호가 공백으로 구분되어 주어진다.
M+2번째 줄에는 X와 K가 공백으로 구분되어 차례대로 주어진다.

출력조건
첫째 줄에 방문 판매원 A가 K번 회사를 거쳐 X번 회사로 가는 최소 이동 시간을 출력한다.
만약 X번 회사에 도달할 수 없다면 -1을 출력한다.

문제 풀이 아이디어
(1번 → K번 최소경로) + (K번 → X번 최소경로)
무한이라면 -1
플로이드 워셜 알고리즘으로 풀이
N의 범위가 100이하로 매우 한정적이므로 프로이드 워셜 알고리즘으로 빠르게 풀 수 있다.
'''
import sys

input = sys.stdin.readline
INF = int(1e9)

n, m = map(int, input().split())  # 회사개수, 경로 개수
graph = [[INF] * (n + 1) for _ in range(n + 1)]  # 연결정보를 기록하는 그래프
for i in range(1, n + 1):
    graph[i][i] = 0  # 자기 자신으로 가는 경로는 0

for i in range(m):
    a, b = map(int, input().split())
    graph[a][b] = 1
    graph[b][a] = 1  # a→b,b→a 모두 이동 시간은 1로 동일하다(양방향)

x, k = map(int, input().split())  # x번 회사, k번 회사

# 플로이드 워셜
for i in range(1, n + 1):
    for a in range(1, n + 1):
        for b in range(1, n + 1):
            graph[a][b] = min(graph[a][b], graph[a][i] + graph[i][b])

result = graph[1][k] + graph[k][x]

if result >= INF:
    print(-1)  # 도달할 수 없는 경우 -1
else:
    print(result)  # 도달할 수 있다면 최단 거리 출력

# 5 7
# 1 2
# 1 3
# 1 4
# 2 4
# 3 4
# 3 5
# 4 5
# 4 5
# [[1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000],
# [1000000000, 0, 1, 1, 1, 2],
# [1000000000, 1, 0, 2, 1, 2],
# [1000000000, 1, 2, 0, 1, 1],
# [1000000000, 1, 1, 1, 0, 1],
# [1000000000, 2, 2, 1, 1, 0]]
