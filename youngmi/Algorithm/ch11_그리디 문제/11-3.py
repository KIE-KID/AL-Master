'''
알고리즘 유형별 기출문제 11장 그리디 - 3. 문자열 뒤집기
난이도: 하, 풀이시간: 20분, 시간제한: 2초, 메모리제한: 128MB  기출: 핵심 유형

문제설명
0과 1로만 이루어진 문자열 S
S에 있는 모든 숫자를 전부 같게 만들려고한다.
S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집을 수 있다.(0→1 1→0)
e.g, 0001100 → 0000000 1번만 뒤집으면 됨
문자열 S가 주어졌을 때 다솜이가 해야하는 행동의 최소 횟수

입력조건: 첫째 줄에 0과 1로만 이루어진 문자열 S가 주어짐. S의 길이는 100만보다 작다.

출력조건: 첫째 줄에 다솜이가 해야하는 행동의 최소 횟수를 출력

문제 풀이 아이디어
전체를 0으로 만드는 경우
전체를 1로 만드는 경우
둘 중에 작은 것을 답으로 출력한다.
'''
s = input()

count0 = 0  # 전체를 0으로 만드는 경우
count1 = 0  # 전체를 1로 만드는 경우

# 첫째 자리에 대한 확인
if s[0] == '1':
    count0 += 1
else:
    count1 += 1

for i in range(len(s) - 1):  # 한 자리씩 전부 확인
    if s[i] != s[i + 1]: # 앞자리와 뒷자리가 숫자가 다른 경우
        if s[i + 1] == '1': # 뒷자리가 1이면
            count0 += 1
        else:
            count1 += 1

print(min(count0, count1)) # 작은 것을 비교하여 출력