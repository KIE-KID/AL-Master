'''
8장 다이나믹 프로그래밍 실전문제3 - 개미 전사
난이도: 중, 풀이시간: 30분, 시간제한: 1초, 메모리제한: 128MB

문제설명


입력조건
첫째 줄에 식량창고의 개수 N이 주어진다.(3<=X<=100)
둘째 줄에 공백으로 구분되어 각 식량창고에 저장된 식량의 개수 K가 주어진다. (3<=X<=100)

출력조건
첫째 줄에 개미전사가 얻을 수 있는 식량의 최댓값을 출력하시오.

문제 풀이 아이디어
최대 입력조건에 맞는 배열을 생성(0으로 초기화한다.) 100개
식량창고 개수 n과 식량개수를 입력받는다(리스트)

index 0부터 +1씩 이동하면서
해당 인덱스까지의 식량창고에서 빼앗을 수 있는 최대 식량개수를 dp 테이블에 저장한다.
현재 인덱스가 i 라면 i + i-2의 값과 i-1을 비교해서 큰값을 저장하면된다.
보텀업방식
'''
n = int(input()) # 식량창고의 개수
array = list(map(int, input().split())) # 식량 개수 입력받기, 빈칸으로 분할해서 리스트로 저장

d = [0] * 100 # dp테이블 초기화, 입력으로 주어질 수 있는 최대 수 100으로 지정

d[0] = array[0] # 첫번째 식량창고까지 털 수 있는 최대 식량 개수는 해당 개수와 동일하다.
d[1] = max(array[0], array[1]) # 두번째 식량창고까지 털 수 있는 최대 식량 개수는 첫번째 식량창고와 두번째 식량창고중 큰 식량 개수이다.(연달에 털 수 없기 때문에)

#보텀업 방식
for i in range(2, n): # index 0(첫번째 식량창고), index 1(두번째 식량창고)는 이미 초기화 완료했으므로 2부터 시작
    d[i] = max(d[i-1], d[i-2] + array[i])

print(d[n-1]) # 계산결과 출력

