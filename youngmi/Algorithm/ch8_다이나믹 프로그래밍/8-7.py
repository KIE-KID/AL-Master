'''
8장 다이나믹 프로그래밍 실전문제4 - 바닥 공사
난이도: 중하, 풀이시간: 20분, 시간제한: 1초, 메모리제한: 128MB

문제설명


입력조건
첫째 줄에 N이 주어진다.(1<=X<=1000)

출력조건
첫째 줄에 2xN 크기의 바닥을 채우는 방법의 수를 796, 796으로 나눈 나머지를 출력한다.
문제 풀이 아이디어
최대 입력조건에 맞는 배열을 생성(0으로 초기화한다.) 100개
식량창고 개수 n과 식량개수를 입력받는다(리스트)

index 0부터 +1씩 이동하면서
해당 인덱스까지의 식량창고에서 빼앗을 수 있는 최대 식량개수를 dp 테이블에 저장한다.
현재 인덱스가 i 라면 i + i-2의 값과 i-1을 비교해서 큰값을 저장하면된다.
보텀업방식
'''
n = int(input()) # 정수 N을 입력 받기

d = [0] * 1001 # 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화

# 다이나믹 프로그래밍(Dynamic Programming) 진행 (보텀업)
d[1] = 1 # 2x1 블록 1가지 방법
d[2] = 3 # 2x1 블록 1가지 방법 1x2 블록 1가지 방법 2x2 블록 1가지 방법
for i in range(3, n + 1):
    d[i] = (d[i - 1] + 2 * d[i - 2]) % 796796

# 계산된 결과 출력
print(d[n])